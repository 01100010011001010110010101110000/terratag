name: release

on:
  push:
    tags:
    - "v[0-9]+.*"

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.15
    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v2
      with:
        version: latest
        args: release --rm-dist
      env:
        CGO_ENABLED: 0
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        HOMEBREW_TAP_GITHUB_TOKEN: ${{ secrets.HOMEBREW_TAP_GITHUB_TOKEN }}
  linuxrelease:
    needs: [goreleaser]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15
      - name: Build with CGO disabled for Alpine Linux
        run: |
          go get -v -t -d ./...
          mkdir out
          CGO_ENABLED=0 go build -a -installsuffix cgo -o ./out/terratag/terratag
      - name: Extract tag name
        id: tag
        uses: actions/github-script@v3
        with:
          result-encoding: string
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            return context.payload.ref.replace('refs/tags/', '');
      - uses: octokit/request-action@v2.x
        id: latest_release
        with:
          route: GET /repos/${{ github.repository }}/releases/latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload linux build
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: https://uploads.github.com/repos/${{ github.repository }}/releases/${{ fromJson(steps.latest_release.outputs.data).id }}/assets{?name,label}
          asset_path: ./out/terratag/terratag
          asset_name: terratag_${{ steps.tag.outputs.result }}_linux_amd64.tar.gz
          asset_content_type: application/zip
